import { NextRequest, NextResponse } from 'next/server';
import { resend } from '@/lib/email/resend-config';

export async function POST(request: NextRequest) {
  try {
    const { to } = await request.json();
    
    console.log('========================================');
    console.log('üîç DEBUG EMAIL TEST');
    console.log('========================================');
    console.log('üìß Destinataire:', to);
    console.log('üîë RESEND_API_KEY existe:', !!process.env.RESEND_API_KEY);
    console.log('üîë RESEND_API_KEY commence par:', process.env.RESEND_API_KEY?.substring(0, 5));
    console.log('üåê NEXT_PUBLIC_APP_BASE_URL:', process.env.NEXT_PUBLIC_APP_BASE_URL);
    console.log('========================================');
    
    if (!process.env.RESEND_API_KEY) {
      console.error('‚ùå RESEND_API_KEY non d√©finie !');
      return NextResponse.json(
        { 
          error: 'RESEND_API_KEY non d√©finie dans .env.local',
          help: 'Cr√©ez un fichier .env.local avec : RESEND_API_KEY=re_xxxxx'
        },
        { status: 500 }
      );
    }
    
    if (!to) {
      return NextResponse.json(
        { error: 'Email destinataire requis' },
        { status: 400 }
      );
    }
    
    console.log('üì§ Tentative d\'envoi via Resend...');
    
    const { data, error } = await resend.emails.send({
      from: 'Test Festival <onboarding@resend.dev>', // Email de test Resend
      to,
      subject: 'üé¨ Test Email - Festival Films Courts Dinan',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h1 style="color: #3b82f6;">‚úÖ Test r√©ussi !</h1>
          <p>Cet email a √©t√© envoy√© depuis votre application Festival B√©n√©voles.</p>
          <hr style="margin: 20px 0; border: none; border-top: 1px solid #e5e7eb;">
          <h2>Configuration d√©tect√©e :</h2>
          <ul>
            <li>‚úÖ RESEND_API_KEY configur√©e</li>
            <li>‚úÖ Email envoy√© √† : <strong>${to}</strong></li>
            <li>‚úÖ Serveur Next.js fonctionnel</li>
          </ul>
          <hr style="margin: 20px 0; border: none; border-top: 1px solid #e5e7eb;">
          <p style="color: #6b7280; font-size: 14px;">
            Si vous voyez cet email, votre syst√®me de notifications fonctionne parfaitement ! üéâ
          </p>
        </div>
      `,
    });
    
    if (error) {
      console.error('‚ùå Erreur Resend:', error);
      return NextResponse.json({ 
        error: error.message,
        details: error,
        help: 'V√©rifiez que votre email est v√©rifi√© sur Resend (Dashboard ‚Üí Domains)'
      }, { status: 500 });
    }
    
    console.log('‚úÖ Email envoy√© avec succ√®s !');
    console.log('üì® ID:', data?.id);
    console.log('========================================');
    
    return NextResponse.json({ 
      success: true, 
      data,
      message: 'Email envoy√© ! V√©rifiez votre bo√Æte (et les spams).'
    });
  } catch (error: any) {
    console.error('‚ùå Erreur catch:', error);
    console.error('Stack:', error.stack);
    return NextResponse.json({ 
      error: error.message,
      stack: error.stack,
      help: 'V√©rifiez les logs du serveur pour plus de d√©tails'
    }, { status: 500 });
  }
}

